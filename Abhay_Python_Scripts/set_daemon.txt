While a non-daemon thread blocks the main program to exit if they are not dead. A daemon thread runs without blocking the main program from exiting. And when main program exits, associated daemon threads are killed too.



import threading

def job_1():
    print("This is job 1")
    for i in range(10):
        for j in range(10):
            k=i+j
            print("job 1 : K : {}".format(k))
    print("Job 1 is completed")

def job_2():
    print("this is job 2")
    for i in range(20):
        for j in range(10):
            k=i+j
            print("job 2 : K : {}".format(k))
    print("job 2 is completed")

t1=threading.Thread(target=job_1)
t2=threading.Thread(target=job_2)

# Daemon thread
t1.setDaemon(True)
t1.start()

t2.start()


